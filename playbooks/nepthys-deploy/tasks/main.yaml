---
- name: "Login to OpenShift using provided token"
  changed_when: false
  command: "oc login {{ OCP_URL }} --insecure-skip-tls-verify=true --token {{ OCP_TOKEN }}"

- name: "Make sure to use project {{ NEPTHYS_APPLICATION_NAMESPACE }}"
  command: "oc project {{ NEPTHYS_APPLICATION_NAMESPACE }}"
  ignore_errors: true
  register: project_exists

- name: "importing required Fedora ImageStreamTags from upstream Registries"
  command: "oc tag --namespace {{ NEPTHYS_APPLICATION_NAMESPACE }} registry.fedoraproject.org/fedora:{{ item }} fedora:{{ item }}"
  with_items:
    - 28

- name: "Create Nepthys ImageStream"
  shell: >
    oc process --namespace {{ NEPTHYS_APPLICATION_NAMESPACE }} --filename=../openshift/imageStream-template.yaml
    | oc apply --namespace {{ NEPTHYS_APPLICATION_NAMESPACE }} -f -

- name: "Create Nepthys BuildConfig"
  shell: >
    oc process --namespace {{ NEPTHYS_APPLICATION_NAMESPACE }} --filename=../openshift/buildconfig-template.yaml
    | oc apply --namespace {{ NEPTHYS_APPLICATION_NAMESPACE }} -f -

- name: "Check if required Secret 'nepthys-secret' exists"
  command: "oc get secret --namespace {{ NEPTHYS_APPLICATION_NAMESPACE }} nepthys-secret"
  ignore_errors: true
  register: secret_exists
- name: "Create Secret with SSH Key and Access Token for GitHub"
  command: oc create secret --namespace {{ NEPTHYS_APPLICATION_NAMESPACE }} generic nepthys-secret
    --from-file=ssh-privatekey={{ NEPTHYS_SSH_PRIVATE_KEY_PATH }}
    --from-literal=github-oauth-token={{ GITHUB_TOKEN }}
    --from-literal=user-name={{ GITHUB_USER }}
    --from-literal=user-email={{ GITHUB_USER_EMAIL }}
    --type=kubernetes.io/ssh-auth
  when: "secret_exists is failed"

- name: "Create Nepthys CronJob"
  shell: >
    oc process --namespace {{ NEPTHYS_APPLICATION_NAMESPACE }} --filename ../openshift/cronjob-template.yaml
    | oc apply --namespace {{ NEPTHYS_APPLICATION_NAMESPACE }} -f -
